"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[17670],{9945:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>r,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var t=a(74848),n=a(28453),i=a(78924);const o={title:"Adhoc tasks",tags:["API","Tasks","Subsystem","Adhoc"]},d=void 0,c={id:"apis/subsystems/task/adhoc",title:"Adhoc tasks",description:"Adhoc tasks are typically used when you need to queue something to run in the background either immediately, where they would be executed as soon as possible, or as a one-off task at some future point in time.",source:"@site/versioned_docs/version-4.3/apis/subsystems/task/adhoc.md",sourceDirName:"apis/subsystems/task",slug:"/apis/subsystems/task/adhoc",permalink:"/moodledevdocs/docs/4.3/apis/subsystems/task/adhoc",draft:!1,unlisted:!1,editUrl:"https://github.com/moodle/devdocs/edit/main/versioned_docs/version-4.3/apis/subsystems/task/adhoc.md",tags:[{label:"API",permalink:"/moodledevdocs/docs/4.3/tags/api"},{label:"Tasks",permalink:"/moodledevdocs/docs/4.3/tags/tasks"},{label:"Subsystem",permalink:"/moodledevdocs/docs/4.3/tags/subsystem"},{label:"Adhoc",permalink:"/moodledevdocs/docs/4.3/tags/adhoc"}],version:"4.3",lastUpdatedBy:"Sara Arjona",lastUpdatedAt:1697795601e3,frontMatter:{title:"Adhoc tasks",tags:["API","Tasks","Subsystem","Adhoc"]},sidebar:"docs",previous:{title:"Task API",permalink:"/moodledevdocs/docs/4.3/apis/subsystems/task/"},next:{title:"Scheduled tasks",permalink:"/moodledevdocs/docs/4.3/apis/subsystems/task/scheduled"}},r={},l=[{value:"Creating adhoc tasks",id:"creating-adhoc-tasks",level:2},{value:"Task class",id:"task-class",level:3},{value:"Custom data",id:"custom-data",level:3},{value:"Task features",id:"task-features",level:3},{value:"Running as a specific user",id:"running-as-a-specific-user",level:4},{value:"Set a task to run at a future time",id:"set-a-task-to-run-at-a-future-time",level:4},{value:"Ignore duplicate adhoc tasks",id:"ignore-duplicate-adhoc-tasks",level:4},{value:"Rescheduling an adhoc task",id:"rescheduling-an-adhoc-task",level:4}];function h(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.A,{frontMatter:o,metadata:c}),"\n",(0,t.jsx)(s.p,{children:"Adhoc tasks are typically used when you need to queue something to run in the background either immediately, where they would be executed as soon as possible, or as a one-off task at some future point in time."}),"\n",(0,t.jsx)(s.p,{children:"Each adhoc task can be called multiple times, with each having its own custom data, and the ability to run as a different user."}),"\n",(0,t.jsx)(s.p,{children:"Adhoc tasks are great for situations such as:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"perform a pre-configured backup"}),"\n",(0,t.jsx)(s.li,{children:"migrate large quantities of data between different formats"}),"\n",(0,t.jsx)(s.li,{children:"send forum posts as an e-mail"}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"creating-adhoc-tasks",children:"Creating adhoc tasks"}),"\n",(0,t.jsx)(s.p,{children:"To create a new adhoc task you should:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["create a new class which extends the ",(0,t.jsx)(s.code,{children:"\\core\\task\\adhoc_task"})," class;"]}),"\n",(0,t.jsx)(s.li,{children:"queue the task"}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"task-class",children:"Task class"}),"\n",(0,t.jsxs)(s.p,{children:["The class for your adhoc task, which extends the ",(0,t.jsx)(s.code,{children:"\\core\\task\\adhoc_task"})," class, should be in the ",(0,t.jsx)(s.code,{children:"classes/task"})," directory of your plugin."]}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)("summary",{children:"View example adhoc task"}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-php",children:"namespace mod_example\\task;\n\n/**\n * An example of an adhoc task.\n */\nclass do_something extends \\core\\task\\adhoc_task {\n\n    /**\n     * Execute the task.\n     */\n    public function execute() {\n        // Call your own api\n    }\n}\n"})})]}),"\n",(0,t.jsx)(s.h3,{id:"custom-data",children:"Custom data"}),"\n",(0,t.jsx)(s.p,{children:"Adhoc tasks can be configured with custom data which is available when the task is run. You might think of custom data as method parameters."}),"\n",(0,t.jsxs)(s.p,{children:["The custom data fields can contain any JSON-serializable content, and can be set using the ",(0,t.jsx)(s.code,{children:"set_custom_data(mixed $content)"})," method."]}),"\n",(0,t.jsxs)(s.p,{children:["It can be fetched using the ",(0,t.jsx)(s.code,{children:"get_custom_data(): mixed"})," method."]}),"\n",(0,t.jsxs)(s.p,{children:["We recommend only ever calling ",(0,t.jsx)(s.code,{children:"set_custom_data()"})," from within a factory method in the task class itself."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-php",children:"class do_something extends \\core\\task\\adhoc_task {\n\n    public static function instance(\n        int $id,\n        string $status,\n    ): self {\n        $task = new self();\n        $task->set_custom_data((object) [\n            'id' => $id,\n            'status' => $status,\n        ]);\n\n        return $task;\n    }\n\n    public function execute() {\n        $data = $this->get_custom_data();\n        mtrace($data->id);\n        mtrace($data->status);\n    }\n}\n"})}),"\n",(0,t.jsx)(s.h3,{id:"task-features",children:"Task features"}),"\n",(0,t.jsx)(s.p,{children:"Adhoc tasks include a number of useful features which are important to be aware of."}),"\n",(0,t.jsx)(s.h4,{id:"running-as-a-specific-user",children:"Running as a specific user"}),"\n",(0,t.jsx)(s.p,{children:"Unless otherwise specified, all tasks will run as the CLI admin user. This is often undesirable and, where relevant, you should specify a userid to run the task as."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-php",children:"// Run this task as a specific user:\n$task->set_userid($someuser->id);\n"})}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsx)(s.p,{children:"We recommend that setting of the task user should also be performed within a factory method."})}),"\n",(0,t.jsx)(s.h4,{id:"set-a-task-to-run-at-a-future-time",children:"Set a task to run at a future time"}),"\n",(0,t.jsxs)(s.p,{children:["You may need to plan to run a task at a future time - for example you may queue a forum digest task to run at a particular time. This can be accomplished using the ",(0,t.jsx)(s.code,{children:"set_next_run_time()"})," function before queueing the task, for example:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-php",children:"$task->set_next_run_time($futuretime);\n\\core\\task\\manager::queue_adhoc_task($task);\n"})}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"set_next_run_time()"})," function takes a unix time stamp. Tasks are not ",(0,t.jsx)(s.em,{children:"guaranteed"})," to run at a specific time, but they will not be run ",(0,t.jsx)(s.em,{children:"before"})," that time."]})}),"\n",(0,t.jsx)(s.h4,{id:"ignore-duplicate-adhoc-tasks",children:"Ignore duplicate adhoc tasks"}),"\n",(0,t.jsx)(s.p,{children:"In some situations you may only wish to queue an adhoc task if an identical adhoc task does not already exist. This can be useful in situations where you are adding a set of items to a bucket for later processing and only wish to process all items once."}),"\n",(0,t.jsxs)(s.p,{children:["When requested, the ",(0,t.jsx)(s.code,{children:"queue_adhoc_task()"})," function will ignore any task where all of the following match an existing task in the queue:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"classname"})," - the class defining the task to be processed"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"component"})," - the component that the task belongs"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"customdata"})," - any custom data for this instance"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"userid"})," - the user that the task will be run as"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Duplicate adhoc task detection can be enabled by passing a truthy value as the second argument to ",(0,t.jsx)(s.code,{children:"queue_adhoc_task()"}),", for example:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-php",children:"\\core\\task\\manager::queue_adhoc_task($task, true);\n"})}),"\n",(0,t.jsx)(s.admonition,{title:"Custom data",type:"tip",children:(0,t.jsx)(s.p,{children:"If creating tasks which will contain a subset of data which will also be run by another instance of the same task type, you should put the data into a database table rather than the task custom data."})}),"\n",(0,t.jsx)(s.h4,{id:"rescheduling-an-adhoc-task",children:"Rescheduling an adhoc task"}),"\n",(0,t.jsxs)(s.p,{children:["Similar to ",(0,t.jsx)(s.a,{href:"#ignore-duplicate-adhoc-tasks",children:"ignoring duplicate adhoc tasks"})," there are situations which require you re_schedule_ a matching task instead. This may happen, for example, in a situation where there is too much churn of your source data."]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"reschedule_or_queue_adhoc_task()"})," function will locate any existing task matching the following fields, and update its time with the time from the new entry:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"classname"})," - the class defining the task to be processed"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"component"})," - the component that the task belongs"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"customdata"})," - any custom data for this instance"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"userid"})," - the user that the task will be run as"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-php",children:"\\core\\task\\manager::reschedule_or_queue_adhoc_task($task);\n"})})]})}function u(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);