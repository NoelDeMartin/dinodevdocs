"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[3428],{29473:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var s=a(74848),d=a(28453),t=a(78924);const i={title:"Advanced elements",tags:["core_form","core","Forms API","Advanced"]},o=void 0,r={id:"apis/subsystems/form/advanced/advanced-elements",title:"Advanced elements",description:"Form elements can be marked as 'advanced'. This has the effect that they are hidden initially.",source:"@site/versioned_docs/version-4.2/apis/subsystems/form/advanced/advanced-elements.md",sourceDirName:"apis/subsystems/form/advanced",slug:"/apis/subsystems/form/advanced/advanced-elements",permalink:"/moodledevdocs/docs/4.2/apis/subsystems/form/advanced/advanced-elements",draft:!1,unlisted:!1,editUrl:"https://github.com/moodle/devdocs/edit/main/versioned_docs/version-4.2/apis/subsystems/form/advanced/advanced-elements.md",tags:[{label:"core_form",permalink:"/moodledevdocs/docs/4.2/tags/core-form"},{label:"core",permalink:"/moodledevdocs/docs/4.2/tags/core"},{label:"Forms API",permalink:"/moodledevdocs/docs/4.2/tags/forms-api"},{label:"Advanced",permalink:"/moodledevdocs/docs/4.2/tags/advanced"}],version:"4.2",lastUpdatedBy:"Andrew Nicols",lastUpdatedAt:1713332374e3,frontMatter:{title:"Advanced elements",tags:["core_form","core","Forms API","Advanced"]},sidebar:"docs",previous:{title:"Forms API",permalink:"/moodledevdocs/docs/4.2/apis/subsystems/form/"},next:{title:"Checkbox controller",permalink:"/moodledevdocs/docs/4.2/apis/subsystems/form/advanced/checkbox-controller"}},c={},l=[{value:"Setting a name",id:"setting-a-name",level:3},{value:"Marking an entire section as advanced",id:"marking-an-entire-section-as-advanced",level:2}];function m(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,d.R)(),...e.components},{InvalidExample:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("InvalidExample",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.A,{frontMatter:i,metadata:r}),"\n",(0,s.jsx)(n.p,{children:"Form elements can be marked as 'advanced'. This has the effect that they are hidden initially."}),"\n",(0,s.jsxs)(n.p,{children:["To control whether an element is advanced, you can use the ",(0,s.jsx)(n.code,{children:"setAdvanced"})," method on the MoodleQuickForm instance and set a specific element as being advanced, for example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",metastring:'title="Marking an element as advanced"',children:"$mform->addElement(\n    'select',\n    'display',\n    get_string('displaymode', 'choice'),\n    $CHOICE_DISPLAY\n);\n$mform->setAdvanced('display');\n"})}),"\n",(0,s.jsxs)(n.p,{children:["It is also possible to unset the advanced status of a field - the ",(0,s.jsx)(n.code,{children:"setAdvanced"})," function takes a second, boolean, parameter which defaults to ",(0,s.jsx)(n.code,{children:"true"}),". By passing a ",(0,s.jsx)(n.code,{children:"false"})," value, the element's advanced flag will be removed, for example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",metastring:'title="Marking an element as advanced"',children:"// Mark a field as not advanced after it was previously marked as advanced.\n$mform->setAdvanced('display', false);\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"warning",children:[(0,s.jsx)(n.p,{children:"You should be careful about marking too many elements as advanced."}),(0,s.jsxs)(n.p,{children:["For more information on the risks of this, see the advice in ",(0,s.jsx)(n.a,{href:"/general/development/policies/designing-usable-forms#use-show-moreless-advanced-settings-sparingly",children:"Designing usable forms"}),"."]})]}),"\n",(0,s.jsxs)(n.admonition,{title:"Location of Show and hide links",type:"info",children:[(0,s.jsxs)(n.p,{children:["Whenever you mark a form element as advanced, then the ",(0,s.jsx)(n.em,{children:"Show / hide advanced"}),"  links are shown automatically at relevant points within the form."]}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"Show advanced"})," and ",(0,s.jsx)(n.em,{children:"Hide advanced"})," links are currently displayed at the top right of all fieldsets containing advanced controls."]})]}),"\n",(0,s.jsx)(n.h3,{id:"setting-a-name",children:"Setting a name"}),"\n",(0,s.jsxs)(n.p,{children:["When adding a header element, the second parameter to ",(0,s.jsx)(n.code,{children:"addElement()"})," is a name field. You should pass a ",(0,s.jsx)(n.em,{children:"unique"})," name for each header."]}),"\n",(0,s.jsxs)(n.p,{children:["If the name is not specified, or is not unique then this can have a range of unintended impacts, including marking multiple sections of the form as advanced. It is strongly encouraged to ",(0,s.jsx)(n.em,{children:"always"})," name headers."]}),"\n",(0,s.jsx)(a,{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",metastring:'title="An empty name is passed to these headings"',children:"$mform->addElement(\n    'header',\n    '',\n    get_string('miscellaneoussettings', 'form')\n);\n$mform->addElement(\n    'select',\n    'display',\n    get_string('displaymode', 'choice'),\n    $CHOICE_DISPLAY\n);\n$mform->setAdvanced('display');\n\n// Because this section has a non-unique name (an empty string),\n// the advanced flag set for the display element in the previous\n// section will also apply here.\n$mform->addElement(\n    'header',\n    '',\n    get_string('anothersection', 'form')\n);\n"})})}),"\n",(0,s.jsx)(n.h2,{id:"marking-an-entire-section-as-advanced",children:"Marking an entire section as advanced"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"setAdvanced"})," function can mark an entire section as advanced by specifying the name of the header at the top of the section, for example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",metastring:'title="Marking an entire section as advanced"',children:"$mform->addElement(\n    'header',\n    'miscellaneoussettingshdr',\n    get_string('miscellaneoussettings', 'form')\n);\n$mform->setAdvanced('miscellaneoussettingshdr');\n"})}),"\n",(0,s.jsx)(n.p,{children:"In this example, all fields from this header until the next header will be marked as advanced."})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}}}]);