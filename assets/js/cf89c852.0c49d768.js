"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[43001],{35272:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>p,toc:()=>i});var l=t(74848),o=t(28453),r=t(78924);const s={title:"Self Enrolment",tags:["Moodle App"]},a=void 0,p={id:"app/development/plugins-development-guide/examples/self-enrolment",title:"Self Enrolment",description:"Using CoreEnrolDelegate handlers you can support enrolment plugins in the app. In this example, we can see how to support a self enrol plugin. You'll need to register a handler in db/mobile.php and return the following JavaScript from the method implementation:",source:"@site/general/app/development/plugins-development-guide/examples/self-enrolment.md",sourceDirName:"app/development/plugins-development-guide/examples",slug:"/app/development/plugins-development-guide/examples/self-enrolment",permalink:"/moodledevdocs/general/app/development/plugins-development-guide/examples/self-enrolment",draft:!1,unlisted:!1,editUrl:"https://github.com/moodle/devdocs/edit/main/general/app/development/plugins-development-guide/examples/self-enrolment.md",tags:[{label:"Moodle App",permalink:"/moodledevdocs/general/tags/moodle-app"}],version:"current",lastUpdatedBy:"Noel De Martin",lastUpdatedAt:1715004871e3,frontMatter:{title:"Self Enrolment",tags:["Moodle App"]},sidebar:"moodleapp",previous:{title:"Question Types",permalink:"/moodledevdocs/general/app/development/plugins-development-guide/examples/question-types"},next:{title:"API Reference",permalink:"/moodledevdocs/general/app/development/plugins-development-guide/api-reference"}},d={},i=[{value:"Other examples",id:"other-examples",level:2}];function m(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.A,{frontMatter:s,metadata:p}),"\n",(0,l.jsxs)(n.p,{children:["Using ",(0,l.jsx)(n.a,{href:"/moodledevdocs/general/app/development/plugins-development-guide/api-reference#coreenroldelegate-43",children:"CoreEnrolDelegate"})," handlers you can support enrolment plugins in the app. In this example, we can see how to support a self enrol plugin. You'll need to register a handler in ",(0,l.jsx)(n.code,{children:"db/mobile.php"})," and return the following JavaScript from the ",(0,l.jsx)(n.code,{children:"method"})," implementation:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"const getEnrolmentInfo = (id) => {\n    // Get enrolment info for the enrol instance.\n    // Used internally, you can use any name, parameters and return data in here.\n};\n\nconst selfEnrol = (method, info) => {\n    // Self enrol the user in the course.\n    // Used internally, you can use any name, parameters and return data in here.\n};\n\nvar result = {\n    getInfoIcons: (courseId) => {\n        return this.CoreEnrolService.getSupportedCourseEnrolmentMethods(courseId, 'selftest').then(enrolments => {\n            if (!enrolments.length) {\n                return [];\n            }\n\n            // Since this code is for testing purposes just use the first one.\n            return getEnrolmentInfo(enrolments[0].id).then(info => {\n                if (!info.enrolpassword) {\n                    return [{\n                        label: 'plugin.enrol_selftest.pluginname',\n                        icon: 'fas-right-to-bracket',\n                    }];\n                } else {\n                    return [{\n                        label: 'plugin.enrol_selftest.pluginname',\n                        icon: 'fas-key',\n                    }];\n                }\n            });\n        });\n    },\n    enrol: (method) => {\n        return getEnrolmentInfo(method.id).then(info => {\n            return selfEnrol(method, info);\n        });\n    },\n    invalidate: (method) => {\n        // Invalidate WS data.\n    },\n};\n\nresult;\n"})}),"\n",(0,l.jsx)(n.h2,{id:"other-examples",children:"Other examples"}),"\n",(0,l.jsxs)(n.p,{children:["You can find more examples about this type of plugins in ",(0,l.jsx)(n.a,{href:"https://tracker.moodle.org/browse/MOBILE-4323",children:"MOBILE-4323"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(m,{...e})}):m(e)}}}]);