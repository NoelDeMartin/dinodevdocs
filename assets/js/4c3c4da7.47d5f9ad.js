"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[54762],{23152:e=>{e.exports=JSON.parse('{"label":"Plugins","permalink":"/moodledevdocs/docs/4.2/tags/plugins","allTagsPath":"/moodledevdocs/docs/4.2/tags","count":17,"items":[{"id":"apis/core/grading/index","title":"Advanced grading API","description":"Advanced grading was introduced in Moodle 2.2 for grading of assignments. It is intended to be used for grading of other types of activities in the later versions.","permalink":"/moodledevdocs/docs/4.2/apis/core/grading/"},{"id":"apis/plugintypes/antivirus/index","title":"Antivirus plugins","description":"Integrate your preferred Antivirus tool to with Moodle to automatically check new file uploads.","permalink":"/moodledevdocs/docs/4.2/apis/plugintypes/antivirus/"},{"id":"apis/plugintypes/blocks/index","title":"Block plugins","description":"Block plugins allow you to show supplemental information, and features, within different parts of Moodle.","permalink":"/moodledevdocs/docs/4.2/apis/plugintypes/blocks/"},{"id":"apis/commonfiles/index","title":"Common files","description":"This page describes the common files which may be present in any Moodle subsystem or plugin type. Some of these files are mandatory and must exist within a component, whilst others are optional.","permalink":"/moodledevdocs/docs/4.2/apis/commonfiles/"},{"id":"apis/plugintypes/format/index","title":"Course format","description":"Course formats are plugins that determine the layout of course resources.","permalink":"/moodledevdocs/docs/4.2/apis/plugintypes/format/"},{"id":"apis/commonfiles/db-tasks.php/index","title":"db/tasks.php","description":"A description of the plugin scheduled task configuration file","permalink":"/moodledevdocs/docs/4.2/apis/commonfiles/db-tasks.php/"},{"id":"apis/plugintypes/enrol/index","title":"Enrolment plugins","description":"Moodle provides a number of ways of managing course enrolment, called enrolment plugins. Each course can decide its enabled enrolment plugins instances and any enrolment plugin can define a workflow the user must follow in order to enrol in the course.","permalink":"/moodledevdocs/docs/4.2/apis/plugintypes/enrol/"},{"id":"apis/plugintypes/filter/index","title":"Filter plugins","description":"Filters are a way to automatically transform content before it is output. Filters may be used to:","permalink":"/moodledevdocs/docs/4.2/apis/plugintypes/filter/"},{"id":"apis/plugintypes/local/index","title":"Local plugins","description":"The recommended way to add new functionality to Moodle is to create a new standard plugin (for example, activity, block, authentication, enrol). The local plugin-type is mostly suitable for things that do not fit into these standard plugin types.","permalink":"/moodledevdocs/docs/4.2/apis/plugintypes/local/"},{"id":"apis/plugintypes/format/migration","title":"Migrating 3.11 formats","description":"The new course editor introduced n Moodle 4.0 reimplements most of the previous webservices, AMD modules, and internal logic of the course rendering. However, all formats since 3.11 will use the previous libraries by default until its final deprecation in Moodle 4.3. This document collects the main adaptations any 3.11 course format will require to continue working when this happens.","permalink":"/moodledevdocs/docs/4.2/apis/plugintypes/format/migration"},{"id":"apis/plugintypes/index","title":"Plugin types","description":"Moodle is a powerful, and very extensible, Learning Management System. One of its core tenets is its extensibility, and this is primarily achieved through the development of plugins.","permalink":"/moodledevdocs/docs/4.2/apis/plugintypes/"},{"id":"guides/upgrade/index","title":"Plugin Upgrades","description":"The Upgrade API is a core API which allows your plugin to manage features of its own installation, and upgrade. Every plugin includes a version which allows the Upgrade API to apply only the required changes.","permalink":"/moodledevdocs/docs/4.2/guides/upgrade/"},{"id":"apis/plugintypes/qbank/index","title":"Question Bank plugins","description":"Question type plugins allow you to extend the functionality of the Moodle Question bank.","permalink":"/moodledevdocs/docs/4.2/apis/plugintypes/qbank/"},{"id":"apis/plugintypes/repository/index","title":"Repository plugins","description":"Repository plugin allow Moodle to bring contents into Moodle from external repositories.","permalink":"/moodledevdocs/docs/4.2/apis/plugintypes/repository/"},{"id":"apis/commonfiles/tag.php/index","title":"tag.php","description":"A description of the library tag.php file, describing what plugins have tags where their callbacks are located.","permalink":"/moodledevdocs/docs/4.2/apis/commonfiles/tag.php/"},{"id":"apis/commonfiles/version.php/index","title":"version.php","description":"A description of the plugin version.php file, describing the various features","permalink":"/moodledevdocs/docs/4.2/apis/commonfiles/version.php/"},{"id":"apis/subsystems/external/writing-a-service","title":"Writing a new service","description":"This documentation covers the creation of a new external service for use in a web service of a fictional local plugin, local_groupmanager.","permalink":"/moodledevdocs/docs/4.2/apis/subsystems/external/writing-a-service"}],"unlisted":false}')}}]);