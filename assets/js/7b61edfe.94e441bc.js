"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[2411],{30564:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var i=s(74848),t=s(28453),o=s(78924);const a={title:"Function Declarations",tags:["Web Services","core_external","external","API"],sidebar_position:1},r=void 0,c={id:"apis/subsystems/external/description",title:"Function Declarations",description:"Before they can be used, all functions must be declared to Moodle, and their inputs and outputs must be defined.",source:"@site/versioned_docs/version-4.3/apis/subsystems/external/description.md",sourceDirName:"apis/subsystems/external",slug:"/apis/subsystems/external/description",permalink:"/moodledevdocs/docs/4.3/apis/subsystems/external/description",draft:!1,unlisted:!1,editUrl:"https://github.com/moodle/devdocs/edit/main/versioned_docs/version-4.3/apis/subsystems/external/description.md",tags:[{label:"Web Services",permalink:"/moodledevdocs/docs/4.3/tags/web-services"},{label:"core_external",permalink:"/moodledevdocs/docs/4.3/tags/core-external"},{label:"external",permalink:"/moodledevdocs/docs/4.3/tags/external"},{label:"API",permalink:"/moodledevdocs/docs/4.3/tags/api"}],version:"4.3",lastUpdatedBy:"Sara Arjona",lastUpdatedAt:1697795601e3,sidebarPosition:1,frontMatter:{title:"Function Declarations",tags:["Web Services","core_external","external","API"],sidebar_position:1},sidebar:"docs",previous:{title:"External Services",permalink:"/moodledevdocs/docs/4.3/apis/subsystems/external/"},next:{title:"Function Definitions",permalink:"/moodledevdocs/docs/4.3/apis/subsystems/external/functions"}},l={},d=[{value:"Service declarations",id:"service-declarations",level:2}];function u(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.A,{frontMatter:a,metadata:c}),"\n",(0,i.jsxs)(n.p,{children:["Before they can be used, all functions must be ",(0,i.jsx)(n.em,{children:"declared"})," to Moodle, and their inputs and outputs must be ",(0,i.jsx)(n.em,{children:"defined"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Functions are ",(0,i.jsx)(n.em,{children:"declared"})," by noting them in the ",(0,i.jsx)(n.code,{children:"db/services.php"})," file for a plugin."]}),"\n",(0,i.jsxs)(n.li,{children:["Functions are ",(0,i.jsx)(n.em,{children:"defined"})," within their own class located within the ",(0,i.jsx)(n.code,{children:"\\component\\external"})," namespace of a component."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Note that there is a strict ",(0,i.jsx)(n.a,{href:"https://moodledev.io/general/development/policies/naming#web-services",children:"naming convention for external service functions"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Function implementation classes consist of one class containing a number of functions, some of which are mandatory."}),"\n",(0,i.jsxs)(n.p,{children:["During a Moodle installation or upgrade, the service and function ",(0,i.jsx)(n.em,{children:"declarations"})," are parsed by a service discovery process and stored within the database. An administrative UI may be used to change ",(0,i.jsx)(n.em,{children:"some"})," configuration details of these declarations."]}),"\n",(0,i.jsx)(n.h2,{id:"service-declarations",children:"Service declarations"}),"\n",(0,i.jsxs)(n.p,{children:["Each component wishing to create an external service function must declare that the function exists by describing it in the ",(0,i.jsx)(n.code,{children:"db/services.php"})," file for that component."]}),"\n",(0,i.jsx)(n.p,{children:"This information is stored internally within Moodle, and collected as part of the service discovery during installation and upgrade."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",metastring:'title="local/groupmanager/db/services.php"',children:"$functions = [\n    // The name of your web service function, as discussed above.\n    'local_myplugin_create_groups' => [\n        // The name of the namespaced class that the function is located in.\n        'classname'   => 'local_groupmanager\\external\\create_groups',\n\n        // A brief, human-readable, description of the web service function.\n        'description' => 'Creates new groups.',\n\n        // Options include read, and write.\n        'type'        => 'write',\n\n        // Whether the service is available for use in AJAX calls from the web.\n        'ajax'        => true,\n\n        // An optional list of services where the function will be included.\n        'services'    => [\n            // A standard Moodle install includes one default service:\n            // - MOODLE_OFFICIAL_MOBILE_SERVICE.\n            // Specifying this service means that your function will be available for\n            // use in the Moodle Mobile App.\n            MOODLE_OFFICIAL_MOBILE_SERVICE,\n        ],\n    ),\n);\n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Advanced options"}),(0,i.jsx)(n.p,{children:"A number of advanced options are also available, as described below:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",metastring:'title="local/groupmanager/db/services.php"',children:"$functions = [\n    // The name of your web service function, as discussed above.\n    'local_myplugin_create_groups' => [\n        // A comma-separated list of capabilities used by the function.\n        // This is advisory only and used to indicate to the administrator\n        // configuring a custom service definition.\n        'capabilities' => 'moodle/course:creategroups,moodle/course:managegroups',\n\n        // The following parameters are also available, but are no longer recommended.\n\n        // The name of the external function name.\n        // If not specified, this will default to 'execute'.\n        'methodname'  => 'execute',\n\n        // The file containing the class/external function.\n        // Do not use if using namespaced auto-loading classes.\n        'classpath'   => 'local/groupmanager/externallib.php',\n    ),\n);\n"})})]}),"\n",(0,i.jsxs)(n.p,{children:["The function name is arbitrary, but must follow ",(0,i.jsx)(n.a,{href:"https://docs.moodle.org/dev/Web_service_API_functions#Naming_convention",children:"the naming convention"}),". This helps ensure that it is globally unique."]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);