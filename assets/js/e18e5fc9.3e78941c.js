"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[45869],{38859:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var o=t(74848),s=t(28453),i=t(78924);const a={title:"Course Formats",tags:["Moodle App"]},r=void 0,l={id:"app/development/plugins-development-guide/examples/course-formats",title:"Course Formats",description:"You can implement custom course formats using the CoreCourseFormatDelegate:",source:"@site/general/app/development/plugins-development-guide/examples/course-formats.md",sourceDirName:"app/development/plugins-development-guide/examples",slug:"/app/development/plugins-development-guide/examples/course-formats",permalink:"/moodledevdocs/general/app/development/plugins-development-guide/examples/course-formats",draft:!1,unlisted:!1,editUrl:"https://github.com/moodle/devdocs/edit/main/general/app/development/plugins-development-guide/examples/course-formats.md",tags:[{label:"Moodle App",permalink:"/moodledevdocs/general/tags/moodle-app"}],version:"current",lastUpdatedBy:"Noel De Martin",lastUpdatedAt:1715004871e3,frontMatter:{title:"Course Formats",tags:["Moodle App"]},sidebar:"moodleapp",previous:{title:"Examples",permalink:"/moodledevdocs/general/app/development/plugins-development-guide/examples/"},next:{title:"Course Modules",permalink:"/moodledevdocs/general/app/development/plugins-development-guide/examples/course-modules"}},c={},m=[{value:"Filtering sections",id:"filtering-sections",level:2},{value:"Using JavaScript",id:"using-javascript",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.A,{frontMatter:a,metadata:l}),"\n",(0,o.jsxs)(n.p,{children:["You can implement custom course formats using the ",(0,o.jsx)(n.a,{href:"/moodledevdocs/general/app/development/plugins-development-guide/api-reference#corecourseformatdelegate",children:"CoreCourseFormatDelegate"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="db/mobile.php"',children:"$addons = [\n    'format_myformat' => [\n        'handlers' => [\n            'myformat' => [\n                'delegate' => 'CoreCourseFormatDelegate',\n                'method' => 'mobile_course_view',\n                'styles' => [\n                    'url' => $CFG->wwwroot . '/course/format/myformat/mobile.css',\n                    'version' => 2019041000,\n                ],\n                'init' => 'myformat_init',\n            ],\n        ],\n    ],\n];\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="classes/output/mobile.php"',children:"class mobile {\n\n    public static function mobile_course_view($args) {\n        global $OUTPUT, $CFG;\n\n        $course = get_course($args['courseid']);\n        require_login($course);\n        $html = $OUTPUT->render_from_template('format_myformat/mobile_course', []);\n\n        return [\n            'templates' => [\n                [\n                    'id' => 'main',\n                    'html' => $html,\n                ],\n            ],\n            'otherdata' => [\n               // ...\n            ],\n        ];\n    }\n\n}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",metastring:'handlebars title="templates/mobile_course.mustache"',children:'{{=<% %>=}}\n<core-dynamic-component [component]="coreCourseFormatComponent.allSectionsComponent" [data]="data" class="format-myformat">\n    <ng-container *ngFor="let section of sections">\n        <ion-item-divider>\n            <ion-label>\n                <core-format-text [text]="section.name" contextLevel="course" [contextInstanceId]="course.id">\n                </core-format-text>\n            </ion-label>\n        </ion-item-divider>\n\n        <ion-item *ngIf="section.summary">\n            <ion-label>\n                <core-format-text [text]="section.summary" contextLevel="course" [contextInstanceId]="course.id">\n                </core-format-text>\n            </ion-label>\n        </ion-item>\n\n        <ng-container *ngFor="let module of section.modules">\n            <ng-container *ngIf="module.visibleoncoursepage !== 0">\n                <core-course-module [module]="module" [section]="section" (completionChanged)="onCompletionChange()">\n                </core-course-module>\n            </ng-container>\n        </ng-container>\n    </ng-container>\n</core-dynamic-component>\n'})}),"\n",(0,o.jsx)(n.p,{children:"Note that in this case, the template is not rendering any dynamic data with mustache; it's simply a static Angular template."}),"\n",(0,o.jsx)(n.p,{children:"With this, you will have something similar to the core format plugin: a list of sections with headers, each containing its list of course modules. From here, you can make customisations to support your course format's features."}),"\n",(0,o.jsxs)(n.p,{children:["To find more about the specific properties and configuration options, make sure to read the ",(0,o.jsx)(n.a,{href:"/moodledevdocs/general/app/development/plugins-development-guide/api-reference#corecourseformatdelegate",children:"CoreCourseFormatDelegate"})," reference."]}),"\n",(0,o.jsx)(n.h2,{id:"filtering-sections",children:"Filtering sections"}),"\n",(0,o.jsx)(n.p,{children:"When your course page loads, the sections array contains all of the sections on the course. However, you might not want to display all of these sections on one page.\nYou can achieve this by returning the list of sections to display along with the template in the rendering method:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"class mobile {\n\n    public static function mobile_course_view($args) {\n       // ...\n\n       $displaysections = myformat\\helper::get_list_of_section_ids($courseid);\n\n        return [\n            'templates' => [\n                [\n                    'id' => 'main',\n                    'html' => $html,\n                ],\n            ],\n            'otherdata' => [\n               'displaysections' => json_encode($displaysections),\n            ],\n        ];\n    }\n\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Then filter the list of sections in your template:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<ng-container *ngFor="let section of sections">\n    <ng-container *ngIf="section.id in CONTENT_OTHERDATA.displaysections">\n        \x3c!-- code to display the section goes here --\x3e\n    </ng-container>\n</ng-container>\n'})}),"\n",(0,o.jsx)(n.h2,{id:"using-javascript",children:"Using JavaScript"}),"\n",(0,o.jsxs)(n.p,{children:["You can also register custom formats using ",(0,o.jsx)(n.a,{href:"/moodledevdocs/general/app/development/plugins-development-guide/#javascript-initialisation",children:"JavaScript initialisation"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"For example, you can implement a single activity format returning the following data:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",metastring:"ng2 title=\"template with 'main' ID\"",children:'<core-dynamic-component [component]="componentClass" [data]="data"></core-dynamic-component>\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"const that = this;\n\nclass AddonSingleActivityFormatComponent {\n\n    constructor() {\n        this.data = {};\n    }\n\n    ngOnChanges(changes) {\n        const self = this;\n\n        if (this.course && this.sections?.length) {\n            const module = this.sections[0]?.modules?.[0];\n\n            if (module && !this.componentClass) {\n                that.CoreCourseModuleDelegate.getMainComponent(that.Injector, this.course, module).then((component) => {\n                    self.componentClass = component ?? that.CoreCourseUnsupportedModuleComponent;\n                });\n            }\n\n            this.data.courseId = this.course.id;\n            this.data.module = module;\n        }\n    }\n\n    async doRefresh(refresher, done) {\n        await this.dynamicComponent.callComponentFunction('doRefresh', [refresher, done]);\n    }\n\n}\n\nclass AddonSingleActivityFormatHandler {\n\n    constructor() {\n        this.name = 'singleactivity';\n    }\n\n    isEnabled() {\n        return true;\n    }\n\n    canViewAllSections() {\n        return false;\n    }\n\n    getCourseTitle(course, sections) {\n        return sections?.[0]?.modules?.[0]\n            ?? course.fullname\n            ?? '';\n    }\n\n    displayCourseIndex() {\n        return false;\n    }\n\n    getCourseFormatComponent() {\n        return that.CoreCompileProvider.instantiateDynamicComponent(that.INIT_TEMPLATES['main'], AddonSingleActivityFormatComponent);\n    }\n\n}\n\nthis.CoreCourseFormatDelegate.registerHandler(new AddonSingleActivityFormatHandler());\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);