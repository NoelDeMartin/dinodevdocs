"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[76360],{39554:(e,o,l)=>{l.r(o),l.d(o,{assets:()=>r,contentTitle:()=>a,default:()=>m,frontMatter:()=>d,metadata:()=>i,toc:()=>c});var t=l(74848),s=l(28453),n=l(78924);const d={title:"Development tools",tags:["tools","coding style","workflow"]},a=void 0,i={id:"development/tools",title:"Development tools",description:"A range of tools are available to make your life as a Moodle developer easier, and your development faster. These range from editor and IDE integrations, to linting tools which helps your code meet Moodle's Coding style, to build tools essential to the build process.",source:"@site/general/development/tools.md",sourceDirName:"development",slug:"/development/tools",permalink:"/moodledevdocs/general/development/tools",draft:!1,unlisted:!1,editUrl:"https://github.com/moodle/devdocs/edit/main/general/development/tools.md",tags:[{label:"tools",permalink:"/moodledevdocs/general/tags/tools"},{label:"coding style",permalink:"/moodledevdocs/general/tags/coding-style"},{label:"workflow",permalink:"/moodledevdocs/general/tags/workflow"}],version:"current",lastUpdatedBy:"Andrew Nicols",lastUpdatedAt:1656421602e3,frontMatter:{title:"Development tools",tags:["tools","coding style","workflow"]},sidebar:"coding",previous:{title:"Social engineering",permalink:"/moodledevdocs/general/development/policies/security/socialengineering"},next:{title:"Behat",permalink:"/moodledevdocs/general/development/tools/behat/"}},r={},c=[{value:"PHP",id:"php",level:2},{value:"JavaScript and CSS",id:"javascript-and-css",level:2},{value:"Development workflow",id:"development-workflow",level:2}];function p(e){const o={a:"a",code:"code",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.A,{frontMatter:d,metadata:i}),"\n",(0,t.jsxs)(o.p,{children:["A range of tools are available to make your life as a Moodle developer easier, and your development faster. These range from editor and IDE integrations, to linting tools which helps your code meet Moodle's ",(0,t.jsx)(o.a,{href:"/moodledevdocs/general/development/policies/codingstyle/",children:"Coding style"}),", to build tools essential to the build process."]}),"\n",(0,t.jsx)(o.p,{children:"These tools are discussed and summarised here."}),"\n",(0,t.jsx)(o.h2,{id:"php",children:"PHP"}),"\n",(0,t.jsxs)(o.p,{children:["Moodle's primary development language is PHP, and all code should pass basic PHP linting checks as a minimum, however all new PHP code must also meet the Moodle ",(0,t.jsx)(o.a,{href:"/moodledevdocs/general/development/policies/codingstyle/",children:"Coding style rules"}),". To make this task easier tools such as the ",(0,t.jsx)(o.a,{href:"/moodledevdocs/general/development/tools/phpcs",children:"PHPCodeSniffer"})," are available."]}),"\n",(0,t.jsx)(o.h2,{id:"javascript-and-css",children:"JavaScript and CSS"}),"\n",(0,t.jsxs)(o.p,{children:["Moodle's JavaScript development relies upon a set of build tools written in JavaScript, and controlled using a task runner called ",(0,t.jsx)(o.code,{children:"grunt"}),". In addition to building JavaScript files, grunt also controls building of theme CSS from SCSS, and stylistic linting checks of CSS."]}),"\n",(0,t.jsxs)(o.p,{children:["See the ",(0,t.jsx)(o.a,{href:"/moodledevdocs/general/development/tools/nodejs",children:"NodeJS and Grunt"})," for more information on these build tools."]}),"\n",(0,t.jsx)(o.h2,{id:"development-workflow",children:"Development workflow"}),"\n",(0,t.jsxs)(o.p,{children:["Along with language-specific tools, several tools have been created to make your day-to-date life as a developer easier. Perhaps the most widely used of these amongst those regularly contributing to the core Moodle project is the ",(0,t.jsx)(o.a,{href:"/moodledevdocs/general/development/tools/mdk",children:"Moodle Development Kit"}),", or MDK as it is typically known."]})]})}function m(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);