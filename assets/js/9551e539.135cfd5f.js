"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[99825],{48632:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var t=n(74848),a=n(28453),i=n(78924);const o={title:"Service creation",tags:["Web Services","core_external","external","API"]},r=void 0,c={id:"apis/subsystems/external/advanced/custom-services",title:"Service creation",description:"Moodle comes with two built-in services that your functions can be attached to.",source:"@site/versioned_docs/version-4.2/apis/subsystems/external/advanced/custom-services.md",sourceDirName:"apis/subsystems/external/advanced",slug:"/apis/subsystems/external/advanced/custom-services",permalink:"/moodledevdocs/docs/4.2/apis/subsystems/external/advanced/custom-services",draft:!1,unlisted:!1,editUrl:"https://github.com/moodle/devdocs/edit/main/versioned_docs/version-4.2/apis/subsystems/external/advanced/custom-services.md",tags:[{label:"Web Services",permalink:"/moodledevdocs/docs/4.2/tags/web-services"},{label:"core_external",permalink:"/moodledevdocs/docs/4.2/tags/core-external"},{label:"external",permalink:"/moodledevdocs/docs/4.2/tags/external"},{label:"API",permalink:"/moodledevdocs/docs/4.2/tags/api"}],version:"4.2",lastUpdatedBy:"Andrew Nicols",lastUpdatedAt:168325581e4,frontMatter:{title:"Service creation",tags:["Web Services","core_external","external","API"]},sidebar:"docs",previous:{title:"Writing a new service",permalink:"/moodledevdocs/docs/4.2/apis/subsystems/external/writing-a-service"},next:{title:"Unit Testing",permalink:"/moodledevdocs/docs/4.2/apis/subsystems/external/testing"}},d={},l=[{value:"Declaring a custom service declaration",id:"declaring-a-custom-service-declaration",level:2}];function m(e){const s={admonition:"admonition",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.A,{frontMatter:o,metadata:c}),"\n",(0,t.jsx)(s.p,{children:"Moodle comes with two built-in services that your functions can be attached to."}),"\n",(0,t.jsxs)(s.p,{children:["In rare situations, you may need to create a create a ",(0,t.jsx)(s.em,{children:"custom"})," service declaration."]}),"\n",(0,t.jsxs)(s.p,{children:["The recommended way of creating a new ",(0,t.jsx)(s.em,{children:"service"})," declaration is by placing it into the ",(0,t.jsx)(s.code,{children:"db/services.php"})," file as a new service declaration."]}),"\n",(0,t.jsx)(s.p,{children:"Moodle Administrators can also manually create a service declaration using the web interface."}),"\n",(0,t.jsxs)(s.p,{children:["This is an advanced feature and, in most cases, ",(0,t.jsx)(s.em,{children:"you will not need to use this feature"}),"."]}),"\n",(0,t.jsxs)(s.admonition,{type:"note",children:[(0,t.jsxs)(s.p,{children:["Whilst writing a service declaration is ",(0,t.jsx)(s.em,{children:"optional"}),", if you do not create a service declaration, then the Moodle administrator will have to create one manually through the Web UI."]}),(0,t.jsx)(s.p,{children:"If you define a web service here, then the administrator cannot add or remove any function from it."})]}),"\n",(0,t.jsx)(s.h2,{id:"declaring-a-custom-service-declaration",children:"Declaring a custom service declaration"}),"\n",(0,t.jsxs)(s.p,{children:["Service declarations should be placed in the ",(0,t.jsx)(s.code,{children:"db/services.php"})," file of your plugin, for example ",(0,t.jsx)(s.code,{children:"local/groupmanager/db/services.php"}),"."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-php",metastring:'title="local/groupmanager/db/services.php"',children:"$services = [\n    // The name of the service.\n    // This does not need to include the component name.\n    'myintegration' => [\n\n        // A list of external functions available in this service.\n        'functions' => [\n            'local_groupmanager_create_groups',\n        ],\n\n        // If set, the external service user will need this capability to access\n        // any function of this service.\n        // For example: 'local_groupmanager/integration:access'\n        'requiredcapability' => 'local_groupmanager/integration:access',\n\n        // If enabled, the Moodle administrator must link a user to this service from the Web UI.\n        'restrictedusers' => 0,\n\n        // Whether the service is enabled by default or not.\n        'enabled' => 1,\n\n        // This field os optional, but requried if the `restrictedusers` value is\n        // set, so as to allow configuration via the Web UI.\n        'shortname' =>  '',\n\n        // Whether to allow file downloads.\n        'downloadfiles' => 0,\n\n        // Whether to allow file uploads.\n        'uploadfiles'  => 0,\n    )\n);\n"})}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsx)(s.p,{children:"It is not possible for an administrator to add/remove any function from a pre-built service."})})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}}}]);