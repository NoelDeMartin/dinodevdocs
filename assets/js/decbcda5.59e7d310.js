"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[62786],{37339:e=>{e.exports=JSON.parse('{"label":"Advanced","permalink":"/moodledevdocs/docs/4.4/tags/advanced","allTagsPath":"/moodledevdocs/docs/4.4/tags","count":4,"items":[{"id":"apis/subsystems/form/advanced/advanced-elements","title":"Advanced elements","description":"Form elements can be marked as \'advanced\'. This has the effect that they are hidden initially.","permalink":"/moodledevdocs/docs/4.4/apis/subsystems/form/advanced/advanced-elements"},{"id":"apis/subsystems/form/advanced/checkbox-controller","title":"Checkbox controller","description":"The checkbox controller allows developers to group checkboxes together and add a link or button to check, or uncheck, all of the checkboxes at once.","permalink":"/moodledevdocs/docs/4.4/apis/subsystems/form/advanced/checkbox-controller"},{"id":"apis/subsystems/form/advanced/no-submit-button","title":"No submit button","description":"The moodleform \'nosubmitbutton_pressed()\' method allows you to detect if a button on your form has been pressed that is a submit button but that has been defined as a button that doesn\'t result in a processing of all the form data but will result in some form \'sub action\' and then having the form redisplayed. This is useful for example to have an \'Add\' button to add some option to a select box in the form etc. You define a button as a no submit button as in the example below (in definition()). This example adds a text box and a submit button in a group.","permalink":"/moodledevdocs/docs/4.4/apis/subsystems/form/advanced/no-submit-button"},{"id":"apis/subsystems/form/advanced/repeat-elements","title":"Repeat elements","description":"The Form API includes the ability to repeat a group of form elements. This is useful where you need to have an unknown quantity of item data, for example possible answers in a quiz question.","permalink":"/moodledevdocs/docs/4.4/apis/subsystems/form/advanced/repeat-elements"}],"unlisted":false}')}}]);